datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Status {
  active
  inactive
}

model User {
  id         Int         @id @default(autoincrement())
  username   String      @unique
  password   String
  email      String?
  avatar     String?
  RoomPlayer RoomPlayer?
}

enum Roles {
  werewolf
  villager
  seer
  doctor
  hunter
  cupid
  witch
  little_girl
  elder
  tanner
  village_idiot
  wild_child
}

model Role {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  point       Int
  enum        Roles      @unique
  status      Status     @default(active)
  RoomRole    RoomRole[]
}

enum RoomStatus {
  waiting
  playing
  finished
}

model RoomRole {
  id       Int     @id @default(autoincrement())
  quantity Int
  checked  Boolean
  roomId   Int     @map("room_id")
  roleId   Int     @map("role_id")
  role     Role    @relation(fields: [roleId], references: [id])
  room     Room    @relation(fields: [roomId], references: [id], onDelete: Cascade)
}

model Room {
  id         Int          @id @default(autoincrement())
  name       String
  maxPlayers Int          @map("max_players")
  status     RoomStatus   @default(waiting)
  players    RoomPlayer[]
  roles      RoomRole[]
}

model RoomPlayer {
  id     Int     @id @default(autoincrement())
  isHost Boolean @default(false) @map("is_host")
  roomId Int     @map("room_id")
  userId Int     @unique @map("user_id")
  user   User    @relation(fields: [userId], references: [id])
  room   Room    @relation(fields: [roomId], references: [id], onDelete: Cascade)
}
